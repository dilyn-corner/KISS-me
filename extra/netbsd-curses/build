#!/bin/sh -e
# Intentional, globbing disabled, respect macros
# shellcheck disable=2086,2089,2090

# We could at one point simply turn this into a Makefile.
# These are the lengths we will go to to avoid gmake.
# Just builds static libs and programs!

# We'd like to see what we're doing
log() {
    printf '%s\n' "---  $3  ---"
    printf '%s %s %s\n' "$@"
}

export TOOL_AWK=awk
export TOOL_SED=sed
export TOOL_TIC=tic/host_tic
export TOOL_SORT=sort
export TOOL_NBPERF=nbperf/nbperf
export TERMINFODIR=./terminfo
export CFLAGS="$CFLAGS -Wno-macro-redefined"
export IFLAGS="-I. -I./libterminfo -I./tic -I./libcurses \
               -I./libmenu -I./libform -I./libpanel"
export NFLAGS="-DHAVE_WCHAR -DTERMINFO_COMPILE -DTERMINFO_DB \
               -DTERMINFO_COMPAT -DINSTALL_PREFIX=\"/usr\""

for file in tic/*.c nbperf/*.c; do
    log CC "${file%%.c}.o" "$file"
    ${CC:-cc} $IFLAGS $NFLAGS $CFLAGS \
        -c -o "${file%%.c}.o" "$file"
done

log CC nbperf nbperf.o
${CC:-cc} $IFLAGS nbperf/*.o -o nbperf/nbperf

log genhash nbperf libterminfo/hash.c
./libterminfo/genhash \
    libterminfo/term.h \
    nbperf/nbperf > libterminfo/hash.c

cp libterminfo/hash.c tic/hash.c

log CC hash.o hash.c
${CC:-cc} $IFLAGS $NFLAGS $CFLAGS \
    -c -o tic/hash.o tic/hash.c

log CCLD tic tic.o
${CC:-cc} $IFLAGS -static tic/*.o -o tic/tic

ln -sf tic tic/host_tic

log genterms tic libterminfo/compiled_terms.c
./libterminfo/genterms \
    libterminfo/term.h \
    terminfo/terminfo \
    tic/host_tic > libterminfo/compiled_terms.c

for file in term.c ti.c setupterm.c curterm.c tparm.c tputs.c \
            compile.c hash.c cdbr.c mi_vector_hash.c; do
    log CC "${file%%.c}.o" "$file"
    ${CC:-cc} $IFLAGS $NFLAGS $CFLAGS \
        -c -o "libterminfo/${file%%.c}.o" "libterminfo/$file"
done

log genthash nbperf libterminfo/termcap_hash.c
./libterminfo/genthash \
    libterminfo/termcap_map.c \
    nbperf/nbperf > libterminfo/termcap_hash.c

log CC libterminfo/termcap.o libterminfo/termcap.c
${CC:-cc} $IFLAGS $NFLAGS $CFLAGS -c -o \
    libterminfo/termcap.o libterminfo/termcap.c

for file in libcurses/*.c; do
    case "$file" in
        libcurses/tscroll.c) ;;
        *) log CC "${file%%.c}.o" "$file"
           ${CC:-cc} $IFLAGS -DHAVE_WCHAR $CFLAGS \
               -c -o "${file%%.c}.o" "$file"
        ;;
    esac
done

for file in libpanel/*.c libmenu/*.c libform/*.c tset/*.c \
            tput/tput.c infocmp/infocmp.c tabs/tabs.c; do
    log CC "${file%%.c}.o" "$file"
    ${CC:-cc} $IFLAGS -DHAVE_WCHAR $CFLAGS \
        -c -o "${file%%.c}.o" "$file"
done

for lib in libterminfo libcurses libpanel libmenu libform; do
    log AR "$lib" "${lib}.o"
    ${AR:-ar} crs $lib/${lib}.a $lib/*.o
done

for file in tset tput tabs infocmp; do
    log CCLD "$file" libterminfo.a
    ${CC:-cc} -o $file/$file $file/*.o libterminfo/libterminfo.a -static
done

# Install binaries, libraries, headers, and pkgconfig files
for bin in tabs tput tset infocmp; do
    install -Dm755 "$bin/$bin" "$1/usr/bin/$bin"
done

install -Dm755 tput/clear.sh "$1/usr/bin/clear"

for lib in libform libmenu libpanel libcurses libterminfo; do
    install -Dm644 "$lib/${lib}.a" "$1/usr/lib/${lib}.a"
done

for hdr in libmenu/eti.h libform/form.h libterminfo/term.h    \
           libmenu/menu.h libpanel/panel.h libcurses/curses.h \
           libcurses/unctrl.h libterminfo/termcap.h; do
    install -Dm644 "$hdr" "$1/usr/include/${hdr%*/}"
done

for pc in menu form formw menuw panel curses panelw \
          ncurses termcap ncursesw terminfo; do
    install -Dm644 "${pc}.pc" "$1/usr/lib/pkgconfig/${pc}.pc"
done

# Create symlinks that are expected to exist
ln -sf tset          "$1/usr/bin/reset"
ln -sf libmenu.a     "$1/usr/lib/libmenuw.a"
ln -sf libform.a     "$1/usr/lib/libformw.a"
ln -sf libpanel.a    "$1/usr/lib/libpanelw.a"
ln -sf libcurses.a   "$1/usr/lib/libncurses.a"
ln -sf libterminfo.a "$1/usr/lib/libtermcap.a"
ln -sf libcurses.a   "$1/usr/lib/libncursesw.a"
ln -sf curses.h      "$1/usr/include/ncurses.h"

# Install the license
install -Dm755 COPYING "$1/usr/share/LICENSES/netbsd-curses.license"
