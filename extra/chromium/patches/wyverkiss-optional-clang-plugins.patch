--- a/build/config/clang/clang.gni
+++ b/build/config/clang/clang.gni
@@ -7,6 +7,11 @@
 default_clang_base_path = "//third_party/llvm-build/Release+Asserts"
 
 declare_args() {
+    # Enable clang plugins (-Xclang)
+    clang_use_plugins = true
+}
+
+declare_args() {
   # Indicates if the build should use the Chrome-specific plugins for enforcing
   # coding guidelines, etc. Only used when compiling with Chrome's Clang, not
   # Chrome OS's.
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -354,7 +354,9 @@
     }
 
     if (use_lld) {
-      ldflags += [ "-fuse-ld=lld" ]
+      ldflags += [ "-fuse-ld=lld",
+                   "-Wl,--allow-multiple-definition",
+                 ]
       if (lld_path != "") {
         ldflags += [ "-B$lld_path" ]
       }
@@ -535,7 +537,7 @@
 
   # Enable text section splitting only on linux when using lld for now. Other
   # platforms can be added later if needed.
-  if ((is_linux || is_chromeos) && use_lld && use_text_section_splitting) {
+  if ((is_linux || is_chromeos) && use_lld && use_text_section_splitting && clang_use_plugins) {
     ldflags += [ "-Wl,-z,keep-text-section-prefix" ]
   }
 
@@ -2325,7 +2327,7 @@
     }
   }
 
-  if (is_clang && (!is_nacl || is_nacl_saigo) && current_os != "zos") {
+  if (is_clang && (!is_nacl || is_nacl_saigo) && current_os != "zos" && clang_use_plugins) {
     if (is_apple) {
       # TODO(https://crbug.com/1050118): Investigate missing debug info on mac.
       # Make sure we don't use constructor homing on mac.
@@ -2364,7 +2366,7 @@
     configs = [ ":win_pdbaltpath" ]
 
     # Enable line tables for clang. MSVC doesn't have an equivalent option.
-    if (is_clang) {
+    if (is_clang && clang_use_plugins) {
       # -gline-tables-only is the same as -g1, but clang-cl only exposes the
       # former.
       cflags += [ "-gline-tables-only" ]
