#!/bin/sh -e

log() {
    printf '%s\n' "---  $3  ---"
    printf '%s %s %s\n' "$@"
}

ELFINC="-I. -I.. -I../lib"

LIBINC="-I. -I.. -I../libelf"

CPPFLAGS="-D_GNU_SOURCE -DHAVE_CONFIG_H -DLOCALEDIR='"/usr/share/locale"' \
          -DBAD_FTS=1"

CFLAGS="-std=gnu99 -Wall -Wshadow -Wformat=2 -Wold-style-definition   \
        -Wstrict-prototypes -Wnull-dereference -Wimplicit-fallthrough \
        -Wunused -Wextra -D_FORTIFY_SOURCE=2 $CFLAGS -Wno-error       \
        -Wno-format-nonliteral -Wno-implicit-function-declaration     \
        -Wno-macro-redefined"

# Clang doesn't understand -Wtrampolines, -Wimplicit-fallthrough=5
sed -i 's/-Wtrampolines//g' lib/Makefile.in
sed -i 's/-Wtrampolines//g' libelf/Makefile.in
sed -i 's/=5//g'            lib/Makefile.in
sed -i 's/=5//g'            libelf/Makefile.in

# Disable configure error for missing argp, fts, and obstack
sed -i 's/as_fn_error.*argp/: "/g'    configure
sed -i 's/as_fn_error.*fts/: "/g'     configure
sed -i 's/as_fn_error.*obstack/: "/g' configure

# Don't compile two unrelated C files which require argp.
sed -i 's/color.*printversion../#/g' lib/Makefile.in

# Who needs error.h anyways...
sed -i '/#include <error.h>/d' lib/system.h

./configure \
    --prefix=/usr \
    --disable-symbol-versioning \
    --disable-debuginfod \
    --disable-nls \
    ac_cv_c99=yes

cd lib

for file in crc32_file.c crc32.c xmalloc.c xstrdup.c xstrndup.c; do
    case $file in
        xmalloc.c) log CC xmalloc.o xmalloc.c
           cc $LIBCPP $LIBINC -fPIC $CFLAGS -ffunction-sections \
           -MT ${file%%.c}.o -MD -MP -MF .deps/${file%%.c}.Tpo -c -o \
           ${file%%.c}.o $file
           mv -f .deps/xmalloc.Tpo .deps/xmalloc.Po ;;
        *) log CC ${file%%.c}.o $file
           cc $LIBCPP $LIBINC -fPIC $CFLAGS -MT ${file%%.c}.o \
           -MD -MP -MF .deps/${file%%.c}.Tpo -c -o ${file%%.c}.o $file
           mv -f .deps/${file%%.c}.Tpo .deps/${file%%.c}.Po ;;
    esac
done

ar rcs libeu.a *.o

cd ../libelf
for file in *.c; do
    log CC ${file%%.c}.o $file
    cc $CPPFLAGS $ELFINC $CFLAGS -MT ${file%%.c}.o -MD -MP -MF \
        .deps/elf_version.Tpo -c -o ${file%%.c}.o $file
done

for file in *.c; do
    log CC ${file%%.c}.os $file
    if cc $CPPFLAGS $ELFINC $CFLAGS -c -o ${file%%.c}.os -fPIC -DPIC -DSHARED \
        -MT ${file%%.c}.os -MD -MP -MF ".deps/${file%%.c}.Tpo" \
        `test -f '$file' || echo './'`$file; \
        then cat ".deps/${file%%.c}.Tpo" >> ".deps/${file%%.c}.Po"; \
            rm -f ".deps/${file%%.c}.Tpo"; \
        else rm -f ".deps/${file%%.c}.Tpo"; exit 1; \
    fi
done

log AR libelf.a xxx.o
ar rcs libelf.a *.o
log AR libelf_pic.a xxx.os
ar rcs libelf_pic.a *.os

log CCLD libelf.so xxx.o
cc $CFLAGS -Wl,--build-id -o libelf.so -shared -Wl,-z,defs  \
    -Wl,-z,relro -o libelf.so -Wl,--soname,libelf.so.1      \
    -Wl,--version-script,libelf.map,--no-undefined          \
    -Wl,--whole-archive libelf_pic.a -Wl,--no-whole-archive \
    ../lib/libeu.a -lz

install -Dm644 libelf.a         "$1/usr/lib/libelf.a"
install -Dm644 gelf.h           "$1/usr/include/gelf.h"
install -Dm644 nlist.h          "$1/usr/include/nlist.h"
install -Dm644 libelf.h         "$1/usr/include/libelf.h"
install -Dm644 elf-knowledge.h  "$1/usr/include/elfutils"
install -Dm644 libelf.so        "$1/usr/lib/libelf-$2.so"
install -Dm644 ../libelf.pc     "$1/usr/lib/pkgconfig/libelf.pc"

ln -sf libelf-$2.so "$1/usr/lib/libelf.so.1"
ln -sf libelf.so.1  "$1/usr/lib/libelf"

# Install the licenses
install -Dm755 ../COPYING        "$1/usr/share/LICENSES/libelf-gpl3.license"
install -Dm755 ../COPYING-GPLV2  "$1/usr/share/LICENSES/libelf-gpl2.license"
install -Dm755 ../COPYING-LGPLV3 "$1/usr/share/LICENSES/libelf-lgpl3.license"
