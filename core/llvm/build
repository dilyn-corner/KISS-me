#!/bin/sh -e

export DESTDIR="$1"

sed -i 's/strtoll_l/strtoll/' \
    libcxx/include/locale
sed -i 's/strtoull_l/strtoull/' \
    libcxx/include/locale
sed -i 's/base, _LIBCPP_GET_C_LOCALE/base/g' \
    libcxx/include/locale

sed -i 's/SANITIZER_COMMON TRUE/SANITIZER_COMMON FALSE/' \
    compiler-rt/cmake/config-ix.cmake

    #-DLLVM_ENABLE_LTO=Thin \
cmake -B build \
    -DCMAKE_C_COMPILER=clang \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -DLLVM_HOST_TRIPLE="$(clang -dumpmachine)" \
    -DLLVM_TARGETS_TO_BUILD="host" \
    -DLLVM_INCLUDE_BENCHMARKS=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DLLVM_INCLUDE_DOCS=OFF \
    -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
    -DLLVM_TOOL_REMARKS_SHLIB_BUILD=OFF \
    -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
    -DLLVM_BUILD_LLVM_DYLIB=OFF \
    -DLLVM_LINK_LLVM_DYLIB=OFF \
    -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;compiler-rt;libunwind;libcxxabi;libcxx;lld" \
    -DLLVM_ENABLE_TERMINFO=OFF \
    -DLLVM_ENABLE_LIBXML2=OFF \
    -DLLVM_ENABLE_LIBEDIT=OFF \
    -DLLVM_ENABLE_LIBCXX=ON \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_PIC=OFF \
    -DLLVM_ENABLE_LLD=ON \
    -DLLVM_ENABLE_EH=ON \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_LINK_CLANG_DYLIB=OFF \
    -DLIBCLANG_INCLUDE_CLANG_TOOLS_EXTRA=ON \
    -DLIBCLANG_BUILD_STATIC=ON \
    -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=OFF \
    -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
    -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=ON \
    -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
    -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
    -DLIBCXXABI_INSTALL_LIBRARY=OFF \
    -DLIBCXXABI_USE_COMPILER_RT=ON \
    -DLIBCXXABI_ENABLE_SHARED=OFF \
    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
    -DLIBCXX_USE_LLVM_UNWINDER=ON \
    -DLIBCXX_HAS_ATOMIC_LIB=OFF \
    -DLIBCXX_USE_COMPILER_RT=ON \
    -DLIBCXX_ENABLE_SHARED=OFF \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_HAS_MUSL_LIBC=ON \
    -DLIBUNWIND_USE_COMPILER_RT=ON \
    -DLIBUNWIND_ENABLE_SHARED=OFF \
    -DSANITIZER_USE_STATIC_CXX_ABI=ON \
    -Wno-dev llvm -G Ninja

ninja -C build
ninja -C build install

# libc++abi header files
install -Dm644 libcxxabi/include/*.h "$1/usr/include"

# LLD: Replace GNU binutils
ln -s ld.lld "$1/usr/bin/ld"

# Clang: Some legacy programs may require cc/c++/cpp
ln -s clang     "$1/usr/bin/cc"
ln -s clang++   "$1/usr/bin/c++"
ln -s clang-cpp "$1/usr/bin/cpp"

# Clang: POSIX compliance
install -m755 c99 "$1/usr/bin/c99"

# Clang: Override libexec, the path is hardcoded, unfortunately.
mv -f "$1/usr/libexec/ccc-analyzer" "$1/usr/lib/clang"
mv -f "$1/usr/libexec/c++-analyzer" "$1/usr/lib/clang"

rmdir "$1/usr/libexec"

sed -i "s|libexec|lib/clang|" "$1/usr/bin/scan-build"
