--- a/kiss
+++ b/kiss
@@ -328,54 +328,6 @@
     done < "$repo_dir/sources"
 }
 
-pkg_extract_tar_hack() {
-    # This is a portable shell implementation of GNU tar's
-    # '--strip-components 1'. Use of this function denotes a
-    # performance penalty.
-    decompress "$2" > "$tmp_dir/ktar" ||
-        die "$1" "Failed to decompress $2"
-
-    tar xf "$tmp_dir/ktar" ||
-        die "$1" "Failed to extract $2"
-
-    # Iterate over all directories in the first level of the
-    # tarball's manifest.
-    tar tf "$tmp_dir/ktar" | while IFS=/ read -r dir _; do
-        # Skip the directory if seen before.
-        ! contains "$_seen" "$dir" || continue && _seen="$_seen $dir"
-
-        # Some tarballs contain './' as the top-level directory,
-        # we need to skip these occurances.
-        [ -d "${dir#.}" ] || continue
-
-        # Move the directory to prevent naming conflicts between
-        # the child and parent.
-        mv -f "$dir" "$pid-$dir"
-
-        # First attempt to move all files up a directory level,
-        # if any files/directories fail (due to mv's lack of
-        # directory merge capability), simply do the exercise
-        # again and copy-merge the remaining files/directories.
-        #
-        # We can't use '-exec {} +' with any arguments between
-        # the '{}' and '+' as this is not POSIX. We must also
-        # use '$0' and '$@' to reference all arguments.
-        #
-        # Using only '$@' causes a single file from each
-        # invocation to be left out of the list. Weird, right?
-        find "$pid-$dir/." ! -name . -prune \
-            -exec sh -c 'mv -f "$0" "$@" .' {} + 2>/dev/null ||
-
-        find "$pid-$dir/." ! -name . -prune \
-            -exec sh -c 'cp -fRp "$0" "$@" .' {} +
-
-        # Remove the directory now that all files have been
-        # transferred out of it. This can't be a simple 'rmdir'
-        # as we may leave files in here if any were copied.
-        rm -rf "$pid-$dir"
-    done
-}
-
 pkg_extract() {
     # Extract all source archives to the build directory and copy over any
     # local repository files.
@@ -408,7 +360,7 @@
             ;;
 
             *.tar|*.tar.??|*.tar.???|*.tar.????|*.t?z)
-                pkg_extract_tar_hack "$1" "$_res"
+                decompress "$_res" | pax -r -s '!^[^/]*/!!'
             ;;
 
             *.zip)
@@ -661,7 +613,7 @@
     cd "$pkg_dir/$1"
 
     # Create a tarball from the contents of the built package.
-    tar cf - . | case $KISS_COMPRESS in
+    pax -w . | case $KISS_COMPRESS in
         bz2)  bzip2 -z ;;
         gz)   gzip -6  ;;
         lzma) lzma -z  ;;
@@ -1297,7 +1249,7 @@
     # then "installed" to the filesystem. Running this step as soon as possible
     # allows us to also check the validity of the tarball and bail out early
     # if needed.
-    decompress "$tar_file" | tar xf -
+    decompress "$tar_file" | pax -r
 
     # Naively assume that the existence of a manifest file is all that
     # determines a valid KISS package from an invalid one. This should be a
